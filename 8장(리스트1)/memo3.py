# 요소 삽입하기
# 끝에 .append를 사용했는데 특정 위치에 요소를 사입하려면 inser()를 쓴다.
# 변수.insert(1, "돌고래") 와 가팅 쓰이며 중간에 삽입하면 뒤에 요소들은 한 차례씩 뒤로 밀린다.

# 요소 찾기 > in 연산자를 사용한다.

# 아래와 같이 index() 메소드를 사용해서 인덱스의 위치를 찾을 수 있다.
# heroes = ["스파이더맨", "슈퍼맨", "헐크", "아이언맨", "배트맨"]
# index = heroes.index("슈퍼맨")
# print(index)

# 요소 삭제하기
# (1). pop() 메소드는 특정 ''위치''에 있는 항목을 삭제한다. 그러면서 동시에 반환된다
# (2). remove() 메소드는 ''항목''을 받아서 제거한다. pop()과 다른 점은 항목의 값을 받아서 일치하는
# 항목을 삭제한다. 더불어 삭제 된값은 반환되지 않는다.


# 리스트 일치 검사
# 리스트를 비교하려면, 먼저 2개의 리스트가 ''동일한 자료형''의 요소들을 가지고 있어야 한다.
# 첫 번쨰 요소의 비교에서 False가 나오면 더이상 비교를 하지 않고 바로 False가 출력된다.

# 리스트 정렬하기(1)
# 리스트 객체의 sort()메소드를 사용하는 방법 > sort()가 호출되면 ''원본 리스트가 변경''된다.
# sorted() 내장 함수를 사용하는 방법 > sorted()는 정렬된 ''새로운 리스트를 반환''한다.

# 리스트 정렬하기(2)
# 리스트를 정렬할 때, key 매개 변수를 이용하여 요소들을 비교하기 전에 sorted() 함수에
# 연결하여 호출되는 함수를 지정할 수 있다. 예를 들어서 split() 함수를 연결해서 단어(토큰)별로
# 분리 후, key 매개변수에 str.lower 값을 지정하면 아스키 코드(한글이면 유니코드)별로 정렬할 수 있다.

# list.sort()dhk sorted()는 모두 부울형의 reverse 매개 변수를 가진다. 이 매개변수는 정렬 방향을 
# 지정하는데 사용된다. 예를 들어서 리스트 역순으로 정렬하려면 다음과 같이 한다.


# 문자열에서 리스트 만들기
# 문자열의 split() 메소드는 문자열을 분리하고 이것을 리스트로 만들어서 반환한다. 이 떄 문자열을
# 분리하는 분리자(separator)를 지정할 수 있다. 만약, 분리자가 지정되지 않으면 스페이스를 이용하여
# 문자열을 분리한다.
# 중첩 루프(nested loop, double loop)에 대한 실습
# 중첩 루프는 반복문안의 또 다른 반목문의 형태를 말한다.
# 중요하게 기억해야할 것은 내부 반복문은 외부 바녹문이 한 번 반복할 때마다
# 새롭게 실행해야 된다는 점이다.(중요)
# 중첩 루프는 테이블(표)와 비슷한 형태를 출력하고자 할때 사용하면 아주 좋다.

#  * 로 사각형 만들기
# for y in range(5):
#     for x in range(10):
#         print("*", end="")
#     print("")


# 더블 루프를 사용하여 아래와 같이 출력하는 프로그램을 작성
# 출력결과
# *
# **
# ***
# ****
# *****
# 첫번째 방법(더블 루프)
for i in range(5):  # 5행을 만든다.
    for y in range(i+1):    
        # 처음 루푸시는 i가 0이기 때문에 1이 나오므로 별포 1개만 찍게된다.
        # 이후는 i값이 증가가 되기 때문에 2번째 루핑할때는 2개를 찍게 된다.
        print("*", end="")
    print("")       #줄바꿈 역할

#  2번째 방법 (format() 함수 이용)
#  format 함수는 {}이용하고 숫자도 같이 이용된다.
#  format 함수도 인덱스를 활용하여 해당하는 값들을 출력할 수가 있다.
print("정수값 : {}, string : {}, float :{}".format(10, "안녕하세요", 10.1)) # 없으면 0,1,2,....이 생략 되어있음
print("정수값 : {2}, string : {1}, float :{0}".format(10, "안녕하세요", 10.1))

# format() 는 공간확보 및  0으로 채우는 기능도 지원한다.
# 콜론(:)을 기준은로 우측에 > 혹은 < 부등호를 사용해서 방향을 지정해줄 수가 있다.
print("숫자 '{:>5d}'".format(300))      #오른쪽(>)으로 밀어서 출력
print("숫자 '{:<5d}'".format(300))      #왼쪽(>)으로 밀어서 출력


for i in range(5):
    print("{:<5}".format("*" * (i+1)))
  
print("------------------------------------")
# 아래 출력 (더블 루프)
# 첫번째 방법
# *****
# ****
# ***
# **
# *
for i in range(5, 0, -1):
    for j in range(i):
        print("*", end="")
    print("")
    

# 두번째 방법(format 함수 이용)
for i  in range(6, 0, -1):
    print("{:<5}".format("*" * (i-1)))